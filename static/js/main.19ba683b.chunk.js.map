{"version":3,"sources":["components/Chart.tsx","components/Portal.tsx","App.tsx","index.tsx"],"names":["Chart","useState","title","text","subtitle","yAxis","xAxis","accessibility","rangeDescription","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","name","type","data","ChartOptions","highcharts","Highcharts","options","Portal","handleWindowClose","WindowRef","useRef","IsWindowCreated","setIsWindowCreated","useEffect","current","window","open","onbeforeunload","unmountComponentAtNode","document","body","close","createPortal","App","IsPortalVisible","setIsPortalVisible","useCallback","className","onClick","render","StrictMode","getElementById"],"mappings":"uQA6EeA,EAtES,WAAM,MAEHC,mBAAgC,CACnDC,MAAO,CACHC,KAAM,gDAGVC,SAAU,CACND,KAAM,kCAGVE,MAAO,CACHH,MAAO,CACHC,KAAM,wBAIdG,MAAO,CACHC,cAAe,CACXC,iBAAkB,wBAI1BC,OAAQ,CACJC,OAAQ,WACRC,MAAO,QACPC,cAAe,UAGnBC,YAAa,CACTC,OAAQ,CACJC,MAAO,CACHC,kBAAkB,GAEtBC,WAAY,OAIpBH,OAAQ,CACJ,CACII,KAAM,eACNC,KAAM,OACNC,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,SAE9D,CACIF,KAAM,gBACNC,KAAM,OACNC,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAE5D,CACIF,KAAM,uBACNC,KAAM,OACNC,KAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAE5D,CACIF,KAAM,sBACNC,KAAM,OACNC,KAAM,CAAC,KAAM,KAAM,KAAM,MAAO,MAAO,MAAO,MAAO,QAEzD,CACIF,KAAM,QACNC,KAAM,OACNC,KAAM,CAAC,MAAO,KAAM,KAAM,MAAO,KAAM,MAAO,MAAO,WA5D1DC,EAFmB,oBAmE1B,OAAO,cAAC,IAAD,CAAiBC,WAAYC,EAAYC,QAASH,KCrC9CI,EA5BqB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBAC7BC,EAAYC,iBAAuC,MADE,EAGb3B,oBAAkB,GAHL,mBAGpD4B,EAHoD,KAGnCC,EAHmC,KAyB3D,OApBAC,qBAAU,WAYN,OAXAJ,EAAUK,QAAUC,OAAOC,KAAK,GAAI,GAAhB,qEAEhBP,EAAUK,UACVF,GAAmB,GAEnBH,EAAUK,QAAQG,eAAiB,WAC/BT,IACAI,GAAmB,KAIpB,WACCH,EAAUK,UACVI,iCAAuBT,EAAUK,QAAQK,SAASC,MAClDX,EAAUK,QAAQO,YAG3B,CAACb,IAEGG,GAAyC,OAAtBF,EAAUK,QAAmBQ,uBAAa,cAAC,EAAD,IAAWb,EAAUK,QAAQK,SAASC,MAAQ,MCVvGG,G,OAlBO,WAAO,IAAD,EACsBxC,oBAAkB,GADxC,mBACjByC,EADiB,KACAC,EADA,KAGlBjB,EAAoBkB,uBAAY,WAClCD,GAAmB,KACpB,IAEH,OACI,sBAAKE,UAAU,MAAf,UACI,8BACI,wBAAQC,QAAS,kBAAMH,GAAoBD,IAA3C,6BAGHA,EAAkB,cAAC,EAAD,CAAchB,sBAA0B,UCTvEqB,iBACI,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJX,SAASY,eAAe,W","file":"static/js/main.19ba683b.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport * as Highcharts from 'highcharts';\r\n\r\nimport type { Options as HighchartsOptionsType } from 'highcharts';\r\n\r\nconst Chart: React.FC = () => {\r\n    // https://www.highcharts.com/demo/line-basic\r\n    const [ChartOptions] = useState<HighchartsOptionsType>({\r\n        title: {\r\n            text: 'Solar Employment Growth by Sector, 2010-2016',\r\n        },\r\n\r\n        subtitle: {\r\n            text: 'Source: thesolarfoundation.com',\r\n        },\r\n\r\n        yAxis: {\r\n            title: {\r\n                text: 'Number of Employees',\r\n            },\r\n        },\r\n\r\n        xAxis: {\r\n            accessibility: {\r\n                rangeDescription: 'Range: 2010 to 2017',\r\n            },\r\n        },\r\n\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'middle',\r\n        },\r\n\r\n        plotOptions: {\r\n            series: {\r\n                label: {\r\n                    connectorAllowed: false,\r\n                },\r\n                pointStart: 2010,\r\n            },\r\n        },\r\n\r\n        series: [\r\n            {\r\n                name: 'Installation',\r\n                type: 'line',\r\n                data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175],\r\n            },\r\n            {\r\n                name: 'Manufacturing',\r\n                type: 'line',\r\n                data: [24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434],\r\n            },\r\n            {\r\n                name: 'Sales & Distribution',\r\n                type: 'line',\r\n                data: [11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387],\r\n            },\r\n            {\r\n                name: 'Project Development',\r\n                type: 'line',\r\n                data: [null, null, 7988, 12169, 15112, 22452, 34400, 34227],\r\n            },\r\n            {\r\n                name: 'Other',\r\n                type: 'line',\r\n                data: [12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111],\r\n            },\r\n        ],\r\n    });\r\n\r\n    return <HighchartsReact highcharts={Highcharts} options={ChartOptions} />;\r\n};\r\n\r\nexport default Chart;\r\n","import { useRef, useState, useEffect } from 'react';\r\nimport { createPortal, unmountComponentAtNode } from 'react-dom';\r\n\r\nimport Chart from './Chart';\r\n\r\ntype PropsType = {\r\n    handleWindowClose: () => void;\r\n};\r\n\r\nconst Portal: React.FC<PropsType> = ({ handleWindowClose }) => {\r\n    const WindowRef = useRef<ReturnType<typeof window.open>>(null);\r\n\r\n    const [IsWindowCreated, setIsWindowCreated] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        WindowRef.current = window.open('', '', `location=1,status=1,scrollbars=1,resizable=0,height=450,width=600`);\r\n\r\n        if (WindowRef.current) {\r\n            setIsWindowCreated(true);\r\n\r\n            WindowRef.current.onbeforeunload = () => {\r\n                handleWindowClose();\r\n                setIsWindowCreated(false);\r\n            };\r\n        }\r\n\r\n        return () => {\r\n            if (WindowRef.current) {\r\n                unmountComponentAtNode(WindowRef.current.document.body);\r\n                WindowRef.current.close();\r\n            }\r\n        };\r\n    }, [handleWindowClose]);\r\n\r\n    return IsWindowCreated && WindowRef.current !== null ? createPortal(<Chart />, WindowRef.current.document.body) : null;\r\n};\r\n\r\nexport default Portal;\r\n","import { useState, useCallback } from 'react';\r\n\r\nimport Portal from './components/Portal';\r\n\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n    const [IsPortalVisible, setIsPortalVisible] = useState<boolean>(false);\r\n\r\n    const handleWindowClose = useCallback(() => {\r\n        setIsPortalVisible(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div>\r\n                <button onClick={() => setIsPortalVisible(!IsPortalVisible)}>toggle portal</button>\r\n            </div>\r\n\r\n            {IsPortalVisible ? <Portal {...{ handleWindowClose }} /> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","/** @jsxRuntime classic */\r\n\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nrender(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}